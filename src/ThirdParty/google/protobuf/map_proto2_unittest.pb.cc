// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/protobuf/map_proto2_unittest.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "google/protobuf/map_proto2_unittest.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace protobuf_unittest {

namespace {

const ::google::protobuf::Descriptor* TestEnumMap_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TestEnumMap_reflection_ = NULL;
const ::google::protobuf::Descriptor* TestEnumMap_KnownMapFieldEntry_descriptor_ = NULL;
const ::google::protobuf::Descriptor* TestEnumMap_UnknownMapFieldEntry_descriptor_ = NULL;
const ::google::protobuf::Descriptor* TestEnumMapPlusExtra_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TestEnumMapPlusExtra_reflection_ = NULL;
const ::google::protobuf::Descriptor* TestEnumMapPlusExtra_KnownMapFieldEntry_descriptor_ = NULL;
const ::google::protobuf::Descriptor* TestEnumMapPlusExtra_UnknownMapFieldEntry_descriptor_ = NULL;
const ::google::protobuf::Descriptor* TestImportEnumMap_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TestImportEnumMap_reflection_ = NULL;
const ::google::protobuf::Descriptor* TestImportEnumMap_ImportEnumAmpEntry_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* Proto2MapEnum_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* Proto2MapEnumPlusExtra_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_google_2fprotobuf_2fmap_5fproto2_5funittest_2eproto() {
  protobuf_AddDesc_google_2fprotobuf_2fmap_5fproto2_5funittest_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "google/protobuf/map_proto2_unittest.proto");
  GOOGLE_CHECK(file != NULL);
  TestEnumMap_descriptor_ = file->message_type(0);
  static const int TestEnumMap_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestEnumMap, known_map_field_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestEnumMap, unknown_map_field_),
  };
  TestEnumMap_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TestEnumMap_descriptor_,
      TestEnumMap::default_instance_,
      TestEnumMap_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestEnumMap, _has_bits_[0]),
      -1,
      -1,
      sizeof(TestEnumMap),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestEnumMap, _internal_metadata_),
      -1);
  TestEnumMap_KnownMapFieldEntry_descriptor_ = TestEnumMap_descriptor_->nested_type(0);
  TestEnumMap_UnknownMapFieldEntry_descriptor_ = TestEnumMap_descriptor_->nested_type(1);
  TestEnumMapPlusExtra_descriptor_ = file->message_type(1);
  static const int TestEnumMapPlusExtra_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestEnumMapPlusExtra, known_map_field_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestEnumMapPlusExtra, unknown_map_field_),
  };
  TestEnumMapPlusExtra_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TestEnumMapPlusExtra_descriptor_,
      TestEnumMapPlusExtra::default_instance_,
      TestEnumMapPlusExtra_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestEnumMapPlusExtra, _has_bits_[0]),
      -1,
      -1,
      sizeof(TestEnumMapPlusExtra),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestEnumMapPlusExtra, _internal_metadata_),
      -1);
  TestEnumMapPlusExtra_KnownMapFieldEntry_descriptor_ = TestEnumMapPlusExtra_descriptor_->nested_type(0);
  TestEnumMapPlusExtra_UnknownMapFieldEntry_descriptor_ = TestEnumMapPlusExtra_descriptor_->nested_type(1);
  TestImportEnumMap_descriptor_ = file->message_type(2);
  static const int TestImportEnumMap_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestImportEnumMap, import_enum_amp_),
  };
  TestImportEnumMap_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TestImportEnumMap_descriptor_,
      TestImportEnumMap::default_instance_,
      TestImportEnumMap_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestImportEnumMap, _has_bits_[0]),
      -1,
      -1,
      sizeof(TestImportEnumMap),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestImportEnumMap, _internal_metadata_),
      -1);
  TestImportEnumMap_ImportEnumAmpEntry_descriptor_ = TestImportEnumMap_descriptor_->nested_type(0);
  Proto2MapEnum_descriptor_ = file->enum_type(0);
  Proto2MapEnumPlusExtra_descriptor_ = file->enum_type(1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_google_2fprotobuf_2fmap_5fproto2_5funittest_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TestEnumMap_descriptor_, &TestEnumMap::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
        TestEnumMap_KnownMapFieldEntry_descriptor_,
        ::google::protobuf::internal::MapEntry<
            ::google::protobuf::int32,
            ::protobuf_unittest::Proto2MapEnum,
            ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
            ::google::protobuf::internal::WireFormatLite::TYPE_ENUM,
            0>::CreateDefaultInstance(
                TestEnumMap_KnownMapFieldEntry_descriptor_));
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
        TestEnumMap_UnknownMapFieldEntry_descriptor_,
        ::google::protobuf::internal::MapEntry<
            ::google::protobuf::int32,
            ::protobuf_unittest::Proto2MapEnum,
            ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
            ::google::protobuf::internal::WireFormatLite::TYPE_ENUM,
            0>::CreateDefaultInstance(
                TestEnumMap_UnknownMapFieldEntry_descriptor_));
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TestEnumMapPlusExtra_descriptor_, &TestEnumMapPlusExtra::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
        TestEnumMapPlusExtra_KnownMapFieldEntry_descriptor_,
        ::google::protobuf::internal::MapEntry<
            ::google::protobuf::int32,
            ::protobuf_unittest::Proto2MapEnumPlusExtra,
            ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
            ::google::protobuf::internal::WireFormatLite::TYPE_ENUM,
            0>::CreateDefaultInstance(
                TestEnumMapPlusExtra_KnownMapFieldEntry_descriptor_));
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
        TestEnumMapPlusExtra_UnknownMapFieldEntry_descriptor_,
        ::google::protobuf::internal::MapEntry<
            ::google::protobuf::int32,
            ::protobuf_unittest::Proto2MapEnumPlusExtra,
            ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
            ::google::protobuf::internal::WireFormatLite::TYPE_ENUM,
            0>::CreateDefaultInstance(
                TestEnumMapPlusExtra_UnknownMapFieldEntry_descriptor_));
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TestImportEnumMap_descriptor_, &TestImportEnumMap::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
        TestImportEnumMap_ImportEnumAmpEntry_descriptor_,
        ::google::protobuf::internal::MapEntry<
            ::google::protobuf::int32,
            ::protobuf_unittest_import::ImportEnumForMap,
            ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
            ::google::protobuf::internal::WireFormatLite::TYPE_ENUM,
            0>::CreateDefaultInstance(
                TestImportEnumMap_ImportEnumAmpEntry_descriptor_));
}

}  // namespace

void protobuf_ShutdownFile_google_2fprotobuf_2fmap_5fproto2_5funittest_2eproto() {
  delete TestEnumMap::default_instance_;
  delete TestEnumMap_reflection_;
  delete TestEnumMapPlusExtra::default_instance_;
  delete TestEnumMapPlusExtra_reflection_;
  delete TestImportEnumMap::default_instance_;
  delete TestImportEnumMap_reflection_;
}

void protobuf_AddDesc_google_2fprotobuf_2fmap_5fproto2_5funittest_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::protobuf_unittest_import::protobuf_AddDesc_google_2fprotobuf_2funittest_5fimport_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n)google/protobuf/map_proto2_unittest.pr"
    "oto\022\021protobuf_unittest\032%google/protobuf/"
    "unittest_import.proto\"\333\002\n\013TestEnumMap\022J\n"
    "\017known_map_field\030e \003(\01321.protobuf_unitte"
    "st.TestEnumMap.KnownMapFieldEntry\022N\n\021unk"
    "nown_map_field\030f \003(\01323.protobuf_unittest"
    ".TestEnumMap.UnknownMapFieldEntry\032V\n\022Kno"
    "wnMapFieldEntry\022\013\n\003key\030\001 \001(\005\022/\n\005value\030\002 "
    "\001(\0162 .protobuf_unittest.Proto2MapEnum:\0028"
    "\001\032X\n\024UnknownMapFieldEntry\022\013\n\003key\030\001 \001(\005\022/"
    "\n\005value\030\002 \001(\0162 .protobuf_unittest.Proto2"
    "MapEnum:\0028\001\"\210\003\n\024TestEnumMapPlusExtra\022S\n\017"
    "known_map_field\030e \003(\0132:.protobuf_unittes"
    "t.TestEnumMapPlusExtra.KnownMapFieldEntr"
    "y\022W\n\021unknown_map_field\030f \003(\0132<.protobuf_"
    "unittest.TestEnumMapPlusExtra.UnknownMap"
    "FieldEntry\032_\n\022KnownMapFieldEntry\022\013\n\003key\030"
    "\001 \001(\005\0228\n\005value\030\002 \001(\0162).protobuf_unittest"
    ".Proto2MapEnumPlusExtra:\0028\001\032a\n\024UnknownMa"
    "pFieldEntry\022\013\n\003key\030\001 \001(\005\0228\n\005value\030\002 \001(\0162"
    ").protobuf_unittest.Proto2MapEnumPlusExt"
    "ra:\0028\001\"\307\001\n\021TestImportEnumMap\022P\n\017import_e"
    "num_amp\030\001 \003(\01327.protobuf_unittest.TestIm"
    "portEnumMap.ImportEnumAmpEntry\032`\n\022Import"
    "EnumAmpEntry\022\013\n\003key\030\001 \001(\005\0229\n\005value\030\002 \001(\016"
    "2*.protobuf_unittest_import.ImportEnumFo"
    "rMap:\0028\001*Z\n\rProto2MapEnum\022\027\n\023PROTO2_MAP_"
    "ENUM_FOO\020\000\022\027\n\023PROTO2_MAP_ENUM_BAR\020\001\022\027\n\023P"
    "ROTO2_MAP_ENUM_BAZ\020\002*\206\001\n\026Proto2MapEnumPl"
    "usExtra\022\031\n\025E_PROTO2_MAP_ENUM_FOO\020\000\022\031\n\025E_"
    "PROTO2_MAP_ENUM_BAR\020\001\022\031\n\025E_PROTO2_MAP_EN"
    "UM_BAZ\020\002\022\033\n\027E_PROTO2_MAP_ENUM_EXTRA\020\003", 1277);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google/protobuf/map_proto2_unittest.proto", &protobuf_RegisterTypes);
  TestEnumMap::default_instance_ = new TestEnumMap();
  TestEnumMapPlusExtra::default_instance_ = new TestEnumMapPlusExtra();
  TestImportEnumMap::default_instance_ = new TestImportEnumMap();
  TestEnumMap::default_instance_->InitAsDefaultInstance();
  TestEnumMapPlusExtra::default_instance_->InitAsDefaultInstance();
  TestImportEnumMap::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_google_2fprotobuf_2fmap_5fproto2_5funittest_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_google_2fprotobuf_2fmap_5fproto2_5funittest_2eproto {
  StaticDescriptorInitializer_google_2fprotobuf_2fmap_5fproto2_5funittest_2eproto() {
    protobuf_AddDesc_google_2fprotobuf_2fmap_5fproto2_5funittest_2eproto();
  }
} static_descriptor_initializer_google_2fprotobuf_2fmap_5fproto2_5funittest_2eproto_;
const ::google::protobuf::EnumDescriptor* Proto2MapEnum_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto2MapEnum_descriptor_;
}
bool Proto2MapEnum_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* Proto2MapEnumPlusExtra_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto2MapEnumPlusExtra_descriptor_;
}
bool Proto2MapEnumPlusExtra_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}


namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TestEnumMap::kKnownMapFieldFieldNumber;
const int TestEnumMap::kUnknownMapFieldFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TestEnumMap::TestEnumMap()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.TestEnumMap)
}

void TestEnumMap::InitAsDefaultInstance() {
}

TestEnumMap::TestEnumMap(const TestEnumMap& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestEnumMap)
}

void TestEnumMap::SharedCtor() {
  _cached_size_ = 0;
  known_map_field_.SetAssignDescriptorCallback(
      protobuf_AssignDescriptorsOnce);
  known_map_field_.SetEntryDescriptor(
      &::protobuf_unittest::TestEnumMap_KnownMapFieldEntry_descriptor_);
  unknown_map_field_.SetAssignDescriptorCallback(
      protobuf_AssignDescriptorsOnce);
  unknown_map_field_.SetEntryDescriptor(
      &::protobuf_unittest::TestEnumMap_UnknownMapFieldEntry_descriptor_);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TestEnumMap::~TestEnumMap() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestEnumMap)
  SharedDtor();
}

void TestEnumMap::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TestEnumMap::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestEnumMap::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestEnumMap_descriptor_;
}

const TestEnumMap& TestEnumMap::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_google_2fprotobuf_2fmap_5fproto2_5funittest_2eproto();
  return *default_instance_;
}

TestEnumMap* TestEnumMap::default_instance_ = NULL;

TestEnumMap* TestEnumMap::New(::google::protobuf::Arena* arena) const {
  TestEnumMap* n = new TestEnumMap;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TestEnumMap::Clear() {
  known_map_field_.Clear();
  unknown_map_field_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool TestEnumMap::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf_unittest.TestEnumMap)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<int32, .protobuf_unittest.Proto2MapEnum> known_map_field = 101;
      case 101: {
        if (tag == 810) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_known_map_field:
          ::google::protobuf::scoped_ptr<TestEnumMap_KnownMapFieldEntry> entry(known_map_field_.NewEntry());
          {
            ::std::string data;
            DO_(::google::protobuf::internal::WireFormatLite::ReadString(input, &data));
            DO_(entry->ParseFromString(data));
            if (::protobuf_unittest::Proto2MapEnum_IsValid(*entry->mutable_value())) {
              (*mutable_known_map_field())[entry->key()] =
                  static_cast< ::protobuf_unittest::Proto2MapEnum >(*entry->mutable_value());
            } else {
              mutable_unknown_fields()->AddLengthDelimited(101, data);
            }
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(810)) goto parse_loop_known_map_field;
        if (input->ExpectTag(818)) goto parse_loop_unknown_map_field;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // map<int32, .protobuf_unittest.Proto2MapEnum> unknown_map_field = 102;
      case 102: {
        if (tag == 818) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_unknown_map_field:
          ::google::protobuf::scoped_ptr<TestEnumMap_UnknownMapFieldEntry> entry(unknown_map_field_.NewEntry());
          {
            ::std::string data;
            DO_(::google::protobuf::internal::WireFormatLite::ReadString(input, &data));
            DO_(entry->ParseFromString(data));
            if (::protobuf_unittest::Proto2MapEnum_IsValid(*entry->mutable_value())) {
              (*mutable_unknown_map_field())[entry->key()] =
                  static_cast< ::protobuf_unittest::Proto2MapEnum >(*entry->mutable_value());
            } else {
              mutable_unknown_fields()->AddLengthDelimited(102, data);
            }
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(818)) goto parse_loop_unknown_map_field;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.TestEnumMap)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.TestEnumMap)
  return false;
#undef DO_
}

void TestEnumMap::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.TestEnumMap)
  // map<int32, .protobuf_unittest.Proto2MapEnum> known_map_field = 101;
  {
    ::google::protobuf::scoped_ptr<TestEnumMap_KnownMapFieldEntry> entry;
    for (::google::protobuf::Map< ::google::protobuf::int32, ::protobuf_unittest::Proto2MapEnum >::const_iterator
        it = this->known_map_field().begin();
        it != this->known_map_field().end(); ++it) {
      entry.reset(known_map_field_.NewEnumEntryWrapper(it->first, it->second));
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
          101, *entry, output);
    }
  }

  // map<int32, .protobuf_unittest.Proto2MapEnum> unknown_map_field = 102;
  {
    ::google::protobuf::scoped_ptr<TestEnumMap_UnknownMapFieldEntry> entry;
    for (::google::protobuf::Map< ::google::protobuf::int32, ::protobuf_unittest::Proto2MapEnum >::const_iterator
        it = this->unknown_map_field().begin();
        it != this->unknown_map_field().end(); ++it) {
      entry.reset(unknown_map_field_.NewEnumEntryWrapper(it->first, it->second));
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
          102, *entry, output);
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.TestEnumMap)
}

::google::protobuf::uint8* TestEnumMap::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestEnumMap)
  // map<int32, .protobuf_unittest.Proto2MapEnum> known_map_field = 101;
  {
    ::google::protobuf::scoped_ptr<TestEnumMap_KnownMapFieldEntry> entry;
    for (::google::protobuf::Map< ::google::protobuf::int32, ::protobuf_unittest::Proto2MapEnum >::const_iterator
        it = this->known_map_field().begin();
        it != this->known_map_field().end(); ++it) {
      entry.reset(known_map_field_.NewEnumEntryWrapper(it->first, it->second));
      target = ::google::protobuf::internal::WireFormatLite::
          WriteMessageNoVirtualToArray(
              101, *entry, target);
    }
  }

  // map<int32, .protobuf_unittest.Proto2MapEnum> unknown_map_field = 102;
  {
    ::google::protobuf::scoped_ptr<TestEnumMap_UnknownMapFieldEntry> entry;
    for (::google::protobuf::Map< ::google::protobuf::int32, ::protobuf_unittest::Proto2MapEnum >::const_iterator
        it = this->unknown_map_field().begin();
        it != this->unknown_map_field().end(); ++it) {
      entry.reset(unknown_map_field_.NewEnumEntryWrapper(it->first, it->second));
      target = ::google::protobuf::internal::WireFormatLite::
          WriteMessageNoVirtualToArray(
              102, *entry, target);
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestEnumMap)
  return target;
}

int TestEnumMap::ByteSize() const {
  int total_size = 0;

  // map<int32, .protobuf_unittest.Proto2MapEnum> known_map_field = 101;
  total_size += 2 * this->known_map_field_size();
  {
    ::google::protobuf::scoped_ptr<TestEnumMap_KnownMapFieldEntry> entry;
    for (::google::protobuf::Map< ::google::protobuf::int32, ::protobuf_unittest::Proto2MapEnum >::const_iterator
        it = this->known_map_field().begin();
        it != this->known_map_field().end(); ++it) {
      entry.reset(known_map_field_.NewEnumEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // map<int32, .protobuf_unittest.Proto2MapEnum> unknown_map_field = 102;
  total_size += 2 * this->unknown_map_field_size();
  {
    ::google::protobuf::scoped_ptr<TestEnumMap_UnknownMapFieldEntry> entry;
    for (::google::protobuf::Map< ::google::protobuf::int32, ::protobuf_unittest::Proto2MapEnum >::const_iterator
        it = this->unknown_map_field().begin();
        it != this->unknown_map_field().end(); ++it) {
      entry.reset(unknown_map_field_.NewEnumEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestEnumMap::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const TestEnumMap* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const TestEnumMap>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TestEnumMap::MergeFrom(const TestEnumMap& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  known_map_field_.MergeFrom(from.known_map_field_);
  unknown_map_field_.MergeFrom(from.unknown_map_field_);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void TestEnumMap::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestEnumMap::CopyFrom(const TestEnumMap& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestEnumMap::IsInitialized() const {

  return true;
}

void TestEnumMap::Swap(TestEnumMap* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TestEnumMap::InternalSwap(TestEnumMap* other) {
  known_map_field_.Swap(&other->known_map_field_);
  unknown_map_field_.Swap(&other->unknown_map_field_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TestEnumMap::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TestEnumMap_descriptor_;
  metadata.reflection = TestEnumMap_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TestEnumMap

// map<int32, .protobuf_unittest.Proto2MapEnum> known_map_field = 101;
int TestEnumMap::known_map_field_size() const {
  return known_map_field_.size();
}
void TestEnumMap::clear_known_map_field() {
  known_map_field_.Clear();
}
 const ::google::protobuf::Map< ::google::protobuf::int32, ::protobuf_unittest::Proto2MapEnum >&
TestEnumMap::known_map_field() const {
  // @@protoc_insertion_point(field_map:protobuf_unittest.TestEnumMap.known_map_field)
  return known_map_field_.GetMap();
}
 ::google::protobuf::Map< ::google::protobuf::int32, ::protobuf_unittest::Proto2MapEnum >*
TestEnumMap::mutable_known_map_field() {
  // @@protoc_insertion_point(field_mutable_map:protobuf_unittest.TestEnumMap.known_map_field)
  return known_map_field_.MutableMap();
}

// map<int32, .protobuf_unittest.Proto2MapEnum> unknown_map_field = 102;
int TestEnumMap::unknown_map_field_size() const {
  return unknown_map_field_.size();
}
void TestEnumMap::clear_unknown_map_field() {
  unknown_map_field_.Clear();
}
 const ::google::protobuf::Map< ::google::protobuf::int32, ::protobuf_unittest::Proto2MapEnum >&
TestEnumMap::unknown_map_field() const {
  // @@protoc_insertion_point(field_map:protobuf_unittest.TestEnumMap.unknown_map_field)
  return unknown_map_field_.GetMap();
}
 ::google::protobuf::Map< ::google::protobuf::int32, ::protobuf_unittest::Proto2MapEnum >*
TestEnumMap::mutable_unknown_map_field() {
  // @@protoc_insertion_point(field_mutable_map:protobuf_unittest.TestEnumMap.unknown_map_field)
  return unknown_map_field_.MutableMap();
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TestEnumMapPlusExtra::kKnownMapFieldFieldNumber;
const int TestEnumMapPlusExtra::kUnknownMapFieldFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TestEnumMapPlusExtra::TestEnumMapPlusExtra()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.TestEnumMapPlusExtra)
}

void TestEnumMapPlusExtra::InitAsDefaultInstance() {
}

TestEnumMapPlusExtra::TestEnumMapPlusExtra(const TestEnumMapPlusExtra& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestEnumMapPlusExtra)
}

void TestEnumMapPlusExtra::SharedCtor() {
  _cached_size_ = 0;
  known_map_field_.SetAssignDescriptorCallback(
      protobuf_AssignDescriptorsOnce);
  known_map_field_.SetEntryDescriptor(
      &::protobuf_unittest::TestEnumMapPlusExtra_KnownMapFieldEntry_descriptor_);
  unknown_map_field_.SetAssignDescriptorCallback(
      protobuf_AssignDescriptorsOnce);
  unknown_map_field_.SetEntryDescriptor(
      &::protobuf_unittest::TestEnumMapPlusExtra_UnknownMapFieldEntry_descriptor_);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TestEnumMapPlusExtra::~TestEnumMapPlusExtra() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestEnumMapPlusExtra)
  SharedDtor();
}

void TestEnumMapPlusExtra::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TestEnumMapPlusExtra::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestEnumMapPlusExtra::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestEnumMapPlusExtra_descriptor_;
}

const TestEnumMapPlusExtra& TestEnumMapPlusExtra::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_google_2fprotobuf_2fmap_5fproto2_5funittest_2eproto();
  return *default_instance_;
}

TestEnumMapPlusExtra* TestEnumMapPlusExtra::default_instance_ = NULL;

TestEnumMapPlusExtra* TestEnumMapPlusExtra::New(::google::protobuf::Arena* arena) const {
  TestEnumMapPlusExtra* n = new TestEnumMapPlusExtra;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TestEnumMapPlusExtra::Clear() {
  known_map_field_.Clear();
  unknown_map_field_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool TestEnumMapPlusExtra::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf_unittest.TestEnumMapPlusExtra)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<int32, .protobuf_unittest.Proto2MapEnumPlusExtra> known_map_field = 101;
      case 101: {
        if (tag == 810) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_known_map_field:
          ::google::protobuf::scoped_ptr<TestEnumMapPlusExtra_KnownMapFieldEntry> entry(known_map_field_.NewEntry());
          {
            ::std::string data;
            DO_(::google::protobuf::internal::WireFormatLite::ReadString(input, &data));
            DO_(entry->ParseFromString(data));
            if (::protobuf_unittest::Proto2MapEnumPlusExtra_IsValid(*entry->mutable_value())) {
              (*mutable_known_map_field())[entry->key()] =
                  static_cast< ::protobuf_unittest::Proto2MapEnumPlusExtra >(*entry->mutable_value());
            } else {
              mutable_unknown_fields()->AddLengthDelimited(101, data);
            }
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(810)) goto parse_loop_known_map_field;
        if (input->ExpectTag(818)) goto parse_loop_unknown_map_field;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // map<int32, .protobuf_unittest.Proto2MapEnumPlusExtra> unknown_map_field = 102;
      case 102: {
        if (tag == 818) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_unknown_map_field:
          ::google::protobuf::scoped_ptr<TestEnumMapPlusExtra_UnknownMapFieldEntry> entry(unknown_map_field_.NewEntry());
          {
            ::std::string data;
            DO_(::google::protobuf::internal::WireFormatLite::ReadString(input, &data));
            DO_(entry->ParseFromString(data));
            if (::protobuf_unittest::Proto2MapEnumPlusExtra_IsValid(*entry->mutable_value())) {
              (*mutable_unknown_map_field())[entry->key()] =
                  static_cast< ::protobuf_unittest::Proto2MapEnumPlusExtra >(*entry->mutable_value());
            } else {
              mutable_unknown_fields()->AddLengthDelimited(102, data);
            }
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(818)) goto parse_loop_unknown_map_field;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.TestEnumMapPlusExtra)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.TestEnumMapPlusExtra)
  return false;
#undef DO_
}

void TestEnumMapPlusExtra::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.TestEnumMapPlusExtra)
  // map<int32, .protobuf_unittest.Proto2MapEnumPlusExtra> known_map_field = 101;
  {
    ::google::protobuf::scoped_ptr<TestEnumMapPlusExtra_KnownMapFieldEntry> entry;
    for (::google::protobuf::Map< ::google::protobuf::int32, ::protobuf_unittest::Proto2MapEnumPlusExtra >::const_iterator
        it = this->known_map_field().begin();
        it != this->known_map_field().end(); ++it) {
      entry.reset(known_map_field_.NewEnumEntryWrapper(it->first, it->second));
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
          101, *entry, output);
    }
  }

  // map<int32, .protobuf_unittest.Proto2MapEnumPlusExtra> unknown_map_field = 102;
  {
    ::google::protobuf::scoped_ptr<TestEnumMapPlusExtra_UnknownMapFieldEntry> entry;
    for (::google::protobuf::Map< ::google::protobuf::int32, ::protobuf_unittest::Proto2MapEnumPlusExtra >::const_iterator
        it = this->unknown_map_field().begin();
        it != this->unknown_map_field().end(); ++it) {
      entry.reset(unknown_map_field_.NewEnumEntryWrapper(it->first, it->second));
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
          102, *entry, output);
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.TestEnumMapPlusExtra)
}

::google::protobuf::uint8* TestEnumMapPlusExtra::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestEnumMapPlusExtra)
  // map<int32, .protobuf_unittest.Proto2MapEnumPlusExtra> known_map_field = 101;
  {
    ::google::protobuf::scoped_ptr<TestEnumMapPlusExtra_KnownMapFieldEntry> entry;
    for (::google::protobuf::Map< ::google::protobuf::int32, ::protobuf_unittest::Proto2MapEnumPlusExtra >::const_iterator
        it = this->known_map_field().begin();
        it != this->known_map_field().end(); ++it) {
      entry.reset(known_map_field_.NewEnumEntryWrapper(it->first, it->second));
      target = ::google::protobuf::internal::WireFormatLite::
          WriteMessageNoVirtualToArray(
              101, *entry, target);
    }
  }

  // map<int32, .protobuf_unittest.Proto2MapEnumPlusExtra> unknown_map_field = 102;
  {
    ::google::protobuf::scoped_ptr<TestEnumMapPlusExtra_UnknownMapFieldEntry> entry;
    for (::google::protobuf::Map< ::google::protobuf::int32, ::protobuf_unittest::Proto2MapEnumPlusExtra >::const_iterator
        it = this->unknown_map_field().begin();
        it != this->unknown_map_field().end(); ++it) {
      entry.reset(unknown_map_field_.NewEnumEntryWrapper(it->first, it->second));
      target = ::google::protobuf::internal::WireFormatLite::
          WriteMessageNoVirtualToArray(
              102, *entry, target);
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestEnumMapPlusExtra)
  return target;
}

int TestEnumMapPlusExtra::ByteSize() const {
  int total_size = 0;

  // map<int32, .protobuf_unittest.Proto2MapEnumPlusExtra> known_map_field = 101;
  total_size += 2 * this->known_map_field_size();
  {
    ::google::protobuf::scoped_ptr<TestEnumMapPlusExtra_KnownMapFieldEntry> entry;
    for (::google::protobuf::Map< ::google::protobuf::int32, ::protobuf_unittest::Proto2MapEnumPlusExtra >::const_iterator
        it = this->known_map_field().begin();
        it != this->known_map_field().end(); ++it) {
      entry.reset(known_map_field_.NewEnumEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // map<int32, .protobuf_unittest.Proto2MapEnumPlusExtra> unknown_map_field = 102;
  total_size += 2 * this->unknown_map_field_size();
  {
    ::google::protobuf::scoped_ptr<TestEnumMapPlusExtra_UnknownMapFieldEntry> entry;
    for (::google::protobuf::Map< ::google::protobuf::int32, ::protobuf_unittest::Proto2MapEnumPlusExtra >::const_iterator
        it = this->unknown_map_field().begin();
        it != this->unknown_map_field().end(); ++it) {
      entry.reset(unknown_map_field_.NewEnumEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestEnumMapPlusExtra::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const TestEnumMapPlusExtra* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const TestEnumMapPlusExtra>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TestEnumMapPlusExtra::MergeFrom(const TestEnumMapPlusExtra& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  known_map_field_.MergeFrom(from.known_map_field_);
  unknown_map_field_.MergeFrom(from.unknown_map_field_);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void TestEnumMapPlusExtra::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestEnumMapPlusExtra::CopyFrom(const TestEnumMapPlusExtra& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestEnumMapPlusExtra::IsInitialized() const {

  return true;
}

void TestEnumMapPlusExtra::Swap(TestEnumMapPlusExtra* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TestEnumMapPlusExtra::InternalSwap(TestEnumMapPlusExtra* other) {
  known_map_field_.Swap(&other->known_map_field_);
  unknown_map_field_.Swap(&other->unknown_map_field_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TestEnumMapPlusExtra::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TestEnumMapPlusExtra_descriptor_;
  metadata.reflection = TestEnumMapPlusExtra_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TestEnumMapPlusExtra

// map<int32, .protobuf_unittest.Proto2MapEnumPlusExtra> known_map_field = 101;
int TestEnumMapPlusExtra::known_map_field_size() const {
  return known_map_field_.size();
}
void TestEnumMapPlusExtra::clear_known_map_field() {
  known_map_field_.Clear();
}
 const ::google::protobuf::Map< ::google::protobuf::int32, ::protobuf_unittest::Proto2MapEnumPlusExtra >&
TestEnumMapPlusExtra::known_map_field() const {
  // @@protoc_insertion_point(field_map:protobuf_unittest.TestEnumMapPlusExtra.known_map_field)
  return known_map_field_.GetMap();
}
 ::google::protobuf::Map< ::google::protobuf::int32, ::protobuf_unittest::Proto2MapEnumPlusExtra >*
TestEnumMapPlusExtra::mutable_known_map_field() {
  // @@protoc_insertion_point(field_mutable_map:protobuf_unittest.TestEnumMapPlusExtra.known_map_field)
  return known_map_field_.MutableMap();
}

// map<int32, .protobuf_unittest.Proto2MapEnumPlusExtra> unknown_map_field = 102;
int TestEnumMapPlusExtra::unknown_map_field_size() const {
  return unknown_map_field_.size();
}
void TestEnumMapPlusExtra::clear_unknown_map_field() {
  unknown_map_field_.Clear();
}
 const ::google::protobuf::Map< ::google::protobuf::int32, ::protobuf_unittest::Proto2MapEnumPlusExtra >&
TestEnumMapPlusExtra::unknown_map_field() const {
  // @@protoc_insertion_point(field_map:protobuf_unittest.TestEnumMapPlusExtra.unknown_map_field)
  return unknown_map_field_.GetMap();
}
 ::google::protobuf::Map< ::google::protobuf::int32, ::protobuf_unittest::Proto2MapEnumPlusExtra >*
TestEnumMapPlusExtra::mutable_unknown_map_field() {
  // @@protoc_insertion_point(field_mutable_map:protobuf_unittest.TestEnumMapPlusExtra.unknown_map_field)
  return unknown_map_field_.MutableMap();
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TestImportEnumMap::kImportEnumAmpFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TestImportEnumMap::TestImportEnumMap()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.TestImportEnumMap)
}

void TestImportEnumMap::InitAsDefaultInstance() {
}

TestImportEnumMap::TestImportEnumMap(const TestImportEnumMap& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestImportEnumMap)
}

void TestImportEnumMap::SharedCtor() {
  _cached_size_ = 0;
  import_enum_amp_.SetAssignDescriptorCallback(
      protobuf_AssignDescriptorsOnce);
  import_enum_amp_.SetEntryDescriptor(
      &::protobuf_unittest::TestImportEnumMap_ImportEnumAmpEntry_descriptor_);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TestImportEnumMap::~TestImportEnumMap() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestImportEnumMap)
  SharedDtor();
}

void TestImportEnumMap::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TestImportEnumMap::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestImportEnumMap::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestImportEnumMap_descriptor_;
}

const TestImportEnumMap& TestImportEnumMap::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_google_2fprotobuf_2fmap_5fproto2_5funittest_2eproto();
  return *default_instance_;
}

TestImportEnumMap* TestImportEnumMap::default_instance_ = NULL;

TestImportEnumMap* TestImportEnumMap::New(::google::protobuf::Arena* arena) const {
  TestImportEnumMap* n = new TestImportEnumMap;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TestImportEnumMap::Clear() {
  import_enum_amp_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool TestImportEnumMap::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf_unittest.TestImportEnumMap)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<int32, .protobuf_unittest_import.ImportEnumForMap> import_enum_amp = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_import_enum_amp:
          ::google::protobuf::scoped_ptr<TestImportEnumMap_ImportEnumAmpEntry> entry(import_enum_amp_.NewEntry());
          {
            ::std::string data;
            DO_(::google::protobuf::internal::WireFormatLite::ReadString(input, &data));
            DO_(entry->ParseFromString(data));
            if (::protobuf_unittest_import::ImportEnumForMap_IsValid(*entry->mutable_value())) {
              (*mutable_import_enum_amp())[entry->key()] =
                  static_cast< ::protobuf_unittest_import::ImportEnumForMap >(*entry->mutable_value());
            } else {
              mutable_unknown_fields()->AddLengthDelimited(1, data);
            }
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_import_enum_amp;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.TestImportEnumMap)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.TestImportEnumMap)
  return false;
#undef DO_
}

void TestImportEnumMap::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.TestImportEnumMap)
  // map<int32, .protobuf_unittest_import.ImportEnumForMap> import_enum_amp = 1;
  {
    ::google::protobuf::scoped_ptr<TestImportEnumMap_ImportEnumAmpEntry> entry;
    for (::google::protobuf::Map< ::google::protobuf::int32, ::protobuf_unittest_import::ImportEnumForMap >::const_iterator
        it = this->import_enum_amp().begin();
        it != this->import_enum_amp().end(); ++it) {
      entry.reset(import_enum_amp_.NewEnumEntryWrapper(it->first, it->second));
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
          1, *entry, output);
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf_unittest.TestImportEnumMap)
}

::google::protobuf::uint8* TestImportEnumMap::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestImportEnumMap)
  // map<int32, .protobuf_unittest_import.ImportEnumForMap> import_enum_amp = 1;
  {
    ::google::protobuf::scoped_ptr<TestImportEnumMap_ImportEnumAmpEntry> entry;
    for (::google::protobuf::Map< ::google::protobuf::int32, ::protobuf_unittest_import::ImportEnumForMap >::const_iterator
        it = this->import_enum_amp().begin();
        it != this->import_enum_amp().end(); ++it) {
      entry.reset(import_enum_amp_.NewEnumEntryWrapper(it->first, it->second));
      target = ::google::protobuf::internal::WireFormatLite::
          WriteMessageNoVirtualToArray(
              1, *entry, target);
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestImportEnumMap)
  return target;
}

int TestImportEnumMap::ByteSize() const {
  int total_size = 0;

  // map<int32, .protobuf_unittest_import.ImportEnumForMap> import_enum_amp = 1;
  total_size += 1 * this->import_enum_amp_size();
  {
    ::google::protobuf::scoped_ptr<TestImportEnumMap_ImportEnumAmpEntry> entry;
    for (::google::protobuf::Map< ::google::protobuf::int32, ::protobuf_unittest_import::ImportEnumForMap >::const_iterator
        it = this->import_enum_amp().begin();
        it != this->import_enum_amp().end(); ++it) {
      entry.reset(import_enum_amp_.NewEnumEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestImportEnumMap::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const TestImportEnumMap* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const TestImportEnumMap>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TestImportEnumMap::MergeFrom(const TestImportEnumMap& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  import_enum_amp_.MergeFrom(from.import_enum_amp_);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void TestImportEnumMap::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestImportEnumMap::CopyFrom(const TestImportEnumMap& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestImportEnumMap::IsInitialized() const {

  return true;
}

void TestImportEnumMap::Swap(TestImportEnumMap* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TestImportEnumMap::InternalSwap(TestImportEnumMap* other) {
  import_enum_amp_.Swap(&other->import_enum_amp_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TestImportEnumMap::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TestImportEnumMap_descriptor_;
  metadata.reflection = TestImportEnumMap_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TestImportEnumMap

// map<int32, .protobuf_unittest_import.ImportEnumForMap> import_enum_amp = 1;
int TestImportEnumMap::import_enum_amp_size() const {
  return import_enum_amp_.size();
}
void TestImportEnumMap::clear_import_enum_amp() {
  import_enum_amp_.Clear();
}
 const ::google::protobuf::Map< ::google::protobuf::int32, ::protobuf_unittest_import::ImportEnumForMap >&
TestImportEnumMap::import_enum_amp() const {
  // @@protoc_insertion_point(field_map:protobuf_unittest.TestImportEnumMap.import_enum_amp)
  return import_enum_amp_.GetMap();
}
 ::google::protobuf::Map< ::google::protobuf::int32, ::protobuf_unittest_import::ImportEnumForMap >*
TestImportEnumMap::mutable_import_enum_amp() {
  // @@protoc_insertion_point(field_mutable_map:protobuf_unittest.TestImportEnumMap.import_enum_amp)
  return import_enum_amp_.MutableMap();
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace protobuf_unittest

// @@protoc_insertion_point(global_scope)
